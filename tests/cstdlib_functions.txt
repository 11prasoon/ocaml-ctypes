ctype.h
     int isalnum(int character);
    int isalpha(int character);
    int iscntrl(int character);
    int isdigit(int character);
    int isgraph(int character);
    int islower(int character);
    int isprint(int character);
    int ispunct(int character);
    int isspace(int character);
    int isupper(int character);
    int isxdigit(int character);

errno.h
    int errno

locale.h
     The lconv structure contains the following variables in any order. The use of this structure is described in 2.6.3 localeconv.

    char *setlocale(int category, const char *locale); 

math.h

    double acos(double x);
    double asin(double x);
    double atan(double x);
    double atan2(doubly y, double x);
    double cos(double x);
    double cosh(double x);
    double sin(double x);
    double sinh(double x);
    double tan(double x);
    double tanh(double x);
    double exp(double x);
    double frexp(double x, int *exponent);
    double ldexp(double x, int exponent);
    double log(double x);
    double log10(double x);
    double modf(double x, double *integer);
    double pow(double x, double y);
    double sqrt(double x);
    double ceil(double x);
    double fabs(double x);
    double floor(double x);
    double fmod(double x, double y);

signal.h
     void (*signal(int sig, void (*func)(int)))(int); 
     int raise(int sig); 

stdlib.h
    double atof(const char *str); 
    int atoi(const char *str); 
    long int atol(const char *str); 
    double strtod(const char *str, char **endptr); 
    long int strtol(const char *str, char **endptr, int base); 
    unsigned long int strtoul(const char *str, char **endptr, int base); 
    void *calloc(size_t nitems, size_t size); 
    void free(void *ptr); 
    void *malloc(size_t size); 
    void *realloc(void *ptr, size_t size); 
    void abort(void); 
    int atexit(void (*func)(void)); 
    void exit(int status); 
    char *getenv(const char *name); 
    int system(const char *string); 
    void *bsearch(const void *key, const void *base, size_t nitems, size_t size, int (*compar)(const void *, const void *)); 
    void qsort(void *base, size_t nitems, size_t size, int (*compar)(const void *, const void*)); 
    int abs(int x); 
    div_t div(int numer, int denom); 
    long int labs(long int x); 
    ldiv_t ldiv(long int numer, long int denom); 
    int rand(void); 
    void srand(unsigned int seed); 
    int mblen(const char *str, size_t n); 
    size_t mbstowcs(schar_t *pwcs, const char *str, size_t n); 
    int mbtowc(whcar_t *pwc, const char *str, size_t n); 
    size_t wcstombs(char *str, const wchar_t *pwcs, size_t n); 
    int wctomb(char *str, wchar_t wchar); 

string.h
    void *memchr(const void *str, int c, size_t n); 
    int memcmp(const void *str1, const void *str2, size_t n); 
    void *memcpy(void *str1, const void *str2, size_t n); 
    void *memmove(void *str1, const void *str2, size_t n); 
    void *memset(void *str, int c, size_t n); 
    char *strcat(char *str1, const char *str2); 
    char *strncat(char *str1, const char *str2, size_t n); 
    char *strchr(const char *str, int c); 
    int strcmp(const char *str1, const char *str2); 
    int strncmp(const char *str1, const char *str2, size_t n); 
    int strcoll(const char *str1, const char *str2); 
    char *strcpy(char *str1, const char *str2); 
    char *strncpy(char *str1, const char *str2, size_t n); 
    size_t strcspn(const char *str1, const char *str2); 
    char *strerror(int errnum); 
    size_t strlen(const char *str); 
    char *strpbrk(const char *str1, const char *str2); 

time.h
    struct tm is a structure used to hold the time and date. Its members are as follows:
         int tm_sec;    /* seconds after the minute (0 to 61) */
         int tm_min;    /* minutes after the hour (0 to 59) */
         int tm_hour;   /* hours since midnight (0 to 23) */
         int tm_mday;   /* day of the month (1 to 31) */
         int tm_mon;    /* months since January (0 to 11) */
         int tm_year;   /* years since 1900 */
         int tm_wday;   /* days since Sunday (0 to 6 Sunday=0) */
         int tm_yday;   /* days since January 1 (0 to 365) */
         int tm_isdst;  /* Daylight Savings Time */
    char *asctime(const struct tm *timeptr); 
    char *ctime(const time_t *timer); 
    double difftime(time_t time1, time_t time2); 
    struct tm *gmtime(const time_t *timer); 
    struct tm *localtime(const time_t *timer); 
    time_t mktime(struct tm *timeptr); 
    size_t strftime(char *str, size_t maxsize, const char *format, const struct tm *timeptr); 
    time_t time(time_t *timer); 
